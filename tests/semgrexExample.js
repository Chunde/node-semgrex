const { SemgrexMatcher } = require('../index');

const nodes = [ { id: 1,
    form: 'Jefferson',
    lemma: 'Jefferson',
    upostag: 'NOUN',
    xpostag: '_',
    feats: '_',
    head: 12,
    deprel: 'nsubj',
    deps: '_',
    misc: '_' },
  { id: 2,
    form: ',',
    lemma: ',',
    upostag: 'PUNCT',
    xpostag: '_',
    feats: '_',
    head: 1,
    deprel: 'p',
    deps: '_',
    misc: '_' },
  { id: 3,
    form: 'who',
    lemma: 'who',
    upostag: 'PRON',
    xpostag: '_',
    feats: '_',
    head: 4,
    deprel: 'nsubj',
    deps: '_',
    misc: '_' },
  { id: 4,
    form: 'was',
    lemma: 'be',
    upostag: 'VERB',
    xpostag: '_',
    feats: '_',
    head: 1,
    deprel: 'rcmod',
    deps: '_',
    misc: '_' },
  { id: 5,
    form: 'the',
    lemma: 'the',
    upostag: 'DET',
    xpostag: '_',
    feats: '_',
    head: 8,
    deprel: 'det',
    deps: '_',
    misc: '_' },
  { id: 6,
    form: 'third',
    lemma: 'third',
    upostag: 'ADJ',
    xpostag: '_',
    feats: '_',
    head: 7,
    deprel: 'amod',
    deps: '_',
    misc: '_' },
  { id: 7,
    form: 'U.S.',
    lemma: 'U.S.',
    upostag: 'NOUN',
    xpostag: '_',
    feats: '_',
    head: 8,
    deprel: 'nn',
    deps: '_',
    misc: '_' },
  { id: 8,
    form: 'President',
    lemma: 'President',
    upostag: 'NOUN',
    xpostag: '_',
    feats: '_',
    head: 4,
    deprel: 'attr',
    deps: '_',
    misc: '_' },
  { id: 9,
    form: ',',
    lemma: ',',
    upostag: 'PUNCT',
    xpostag: '_',
    feats: '_',
    head: 1,
    deprel: 'p',
    deps: '_',
    misc: '_' },
  { id: 10,
    form: 'did',
    lemma: 'do',
    upostag: 'VERB',
    xpostag: '_',
    feats: '_',
    head: 12,
    deprel: 'aux',
    deps: '_',
    misc: '_' },
  { id: 11,
    form: 'not',
    lemma: 'not',
    upostag: 'ADV',
    xpostag: '_',
    feats: '_',
    head: 12,
    deprel: 'neg',
    deps: '_',
    misc: '_' },
  { id: 12,
    form: 'believe',
    lemma: 'believe',
    upostag: 'VERB',
    xpostag: '_',
    feats: '_',
    head: 0,
    deprel: 'root',
    deps: '_',
    misc: '_' },
  { id: 13,
    form: 'the',
    lemma: 'the',
    upostag: 'DET',
    xpostag: '_',
    feats: '_',
    head: 15,
    deprel: 'det',
    deps: '_',
    misc: '_' },
  { id: 14,
    form: 'Embargo',
    lemma: 'Embargo',
    upostag: 'NOUN',
    xpostag: '_',
    feats: '_',
    head: 15,
    deprel: 'nn',
    deps: '_',
    misc: '_' },
  { id: 15,
    form: 'Act',
    lemma: 'Act',
    upostag: 'NOUN',
    xpostag: '_',
    feats: '_',
    head: 24,
    deprel: 'nsubj',
    deps: '_',
    misc: '_' },
  { id: 16,
    form: ',',
    lemma: ',',
    upostag: 'PUNCT',
    xpostag: '_',
    feats: '_',
    head: 15,
    deprel: 'p',
    deps: '_',
    misc: '_' },
  { id: 17,
    form: 'which',
    lemma: 'which',
    upostag: 'DET',
    xpostag: '_',
    feats: '_',
    head: 18,
    deprel: 'nsubj',
    deps: '_',
    misc: '_' },
  { id: 18,
    form: 'restricted',
    lemma: 'restrict',
    upostag: 'VERB',
    xpostag: '_',
    feats: '_',
    head: 15,
    deprel: 'rcmod',
    deps: '_',
    misc: '_' },
  { id: 19,
    form: 'trade',
    lemma: 'trade',
    upostag: 'NOUN',
    xpostag: '_',
    feats: '_',
    head: 18,
    deprel: 'dobj',
    deps: '_',
    misc: '_' },
  { id: 20,
    form: 'with',
    lemma: 'with',
    upostag: 'ADP',
    xpostag: '_',
    feats: '_',
    head: 19,
    deprel: 'prep',
    deps: '_',
    misc: '_' },
  { id: 21,
    form: 'Europe',
    lemma: 'Europe',
    upostag: 'NOUN',
    xpostag: '_',
    feats: '_',
    head: 20,
    deprel: 'pobj',
    deps: '_',
    misc: '_' },
  { id: 22,
    form: ',',
    lemma: ',',
    upostag: 'PUNCT',
    xpostag: '_',
    feats: '_',
    head: 15,
    deprel: 'p',
    deps: '_',
    misc: '_' },
  { id: 23,
    form: 'would',
    lemma: 'would',
    upostag: 'VERB',
    xpostag: '_',
    feats: '_',
    head: 24,
    deprel: 'aux',
    deps: '_',
    misc: '_' },
  { id: 24,
    form: 'hurt',
    lemma: 'hurt',
    upostag: 'VERB',
    xpostag: '_',
    feats: '_',
    head: 12,
    deprel: 'ccomp',
    deps: '_',
    misc: '_' },
  { id: 25,
    form: 'the',
    lemma: 'the',
    upostag: 'DET',
    xpostag: '_',
    feats: '_',
    head: 27,
    deprel: 'det',
    deps: '_',
    misc: '_' },
  { id: 26,
    form: 'American',
    lemma: 'American',
    upostag: 'ADJ',
    xpostag: '_',
    feats: '_',
    head: 27,
    deprel: 'amod',
    deps: '_',
    misc: '_' },
  { id: 27,
    form: 'economy',
    lemma: 'economy',
    upostag: 'NOUN',
    xpostag: '_',
    feats: '_',
    head: 24,
    deprel: 'dobj',
    deps: '_',
    misc: '_' } ];

main().catch(error => console.log(error));

async function main() {
    const matcher = new SemgrexMatcher({
        nodes,
        pattern: '{}=A <rcmod=rel {}=B'
    });

    console.log( 'MATCHES', await matcher.matches() );

    while ( await matcher.find() ) {
        console.log( 'MATCH=', await matcher.getMatch() );
        console.log( 'NODE A=', await matcher.getNode('A') );
        console.log( 'NODE B=', await matcher.getNode('B') );
        console.log( await matcher.getNodeNames() );
        console.log( await matcher.getRelationNames() );
        console.log( await matcher.getRelnString('rel') );
        console.log( await matcher.toString() );

    }
}
